package gui;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Employee;
import model.RegularEmployee;
import dao.EmployeeDAO;
import dao.CredentialDAO;
import dao.PositionDAO;
import dao.SalaryDAO;
import java.util.Date;
import java.util.List;
import data.DBConnection; 
import java.sql.Connection;
import utilities.UtilMethods;

public class AddEmployee extends javax.swing.JFrame {

    private static final Logger LOGGER = Logger.getLogger(AddEmployee.class.getName());

    public AddEmployee() {
        initComponents();
        UtilMethods.styleButton(addEmpData);
        populatePositionDropdown();
        populateSupervisorDropdown();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empLN = new javax.swing.JTextField();
        empFN = new javax.swing.JTextField();
        empAdd = new javax.swing.JTextField();
        empPN = new javax.swing.JTextField();
        empSSSN = new javax.swing.JTextField();
        empPHN = new javax.swing.JTextField();
        empTIN = new javax.swing.JTextField();
        empPIN = new javax.swing.JTextField();
        empStat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        addEmpData = new javax.swing.JButton();
        basicSalary = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        empDOB = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        empSup = new javax.swing.JComboBox<>();
        empPos = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adding Employee Data");
        setMinimumSize(new java.awt.Dimension(500, 650));
        setResizable(false);

        empAdd.setText("House/Unit #, Brgy, City, Province, Region, Postal Code");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Last Name :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("First Name :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Date of Birth :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Address :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Phone Number :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("SSS Number :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("PhilHealth Number :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("TIN :");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("HDMFN:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Employment Status :");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Position :");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Supervisor");

        addEmpData.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addEmpData.setText("Add Employee Data");
        addEmpData.setMaximumSize(new java.awt.Dimension(140, 23));
        addEmpData.setMinimumSize(new java.awt.Dimension(140, 23));
        addEmpData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmpDataActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Basic Salary :");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Personal Information");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Government ID Numbers");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Employment Information");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("User Name");

        empSup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        empPos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(empLN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(empFN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel7)
                .addGap(16, 16, 16)
                .addComponent(empPN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel5)
                .addGap(17, 17, 17)
                .addComponent(empDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(empAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel8)
                .addGap(12, 12, 12)
                .addComponent(empSSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jLabel10)
                .addGap(6, 6, 6)
                .addComponent(empTIN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel9)
                .addGap(12, 12, 12)
                .addComponent(empPHN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel11)
                .addGap(6, 6, 6)
                .addComponent(empPIN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel16))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel17)
                .addGap(62, 62, 62)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel13)
                .addGap(6, 6, 6)
                .addComponent(empPos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel14)
                .addGap(12, 12, 12)
                .addComponent(empSup, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel15)
                .addGap(8, 8, 8)
                .addComponent(basicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel12)
                .addGap(10, 10, 10)
                .addComponent(empStat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(addEmpData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(empPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(empDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(empAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empSSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empTIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empPHN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empPIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))))
                .addGap(26, 26, 26)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel13))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(basicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(empStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(addEmpData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void addEmpDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmpDataActionPerformed
        Connection conn = null;
        try {

            conn = DBConnection.getTransactionalConnection();


            EmployeeDAO employeeDAO = new EmployeeDAO();
            CredentialDAO credentialDAO = new CredentialDAO();
            SalaryDAO salaryDAO = new SalaryDAO();

            String empLNValue = empLN.getText();
            String empFNValue = empFN.getText();
            Date empDOBValue = empDOB.getDate();
            String empAddValue = empAdd.getText();
            String empPNValue = empPN.getText();
            String empSSSNValue = empSSSN.getText();
            String empPHNValue = empPHN.getText();
            String empTINValue = empTIN.getText();
            String empPINValue = empPIN.getText();
            String empStatValue = empStat.getText();
            String empPosValue = (String) empPos.getSelectedItem();
            String empSupValue = (String) empSup.getSelectedItem();

            String username = userName.getText().trim();
            String defaultPassword = "Test123"; //CHANGE

            String basicSalaryText = basicSalary.getText().trim();

            if (empLNValue.isEmpty() || empFNValue.isEmpty() || empDOBValue == null || empAddValue.isEmpty()
                    || empPNValue.isEmpty() || empSSSNValue.isEmpty() || empPHNValue.isEmpty() || empTINValue.isEmpty() || empPINValue.isEmpty()
                    || empStatValue.isEmpty() || empPosValue == null || empSupValue == null || username.isEmpty() || basicSalaryText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Add Employee Data", JOptionPane.WARNING_MESSAGE);
                return;
            }

            if (!empPNValue.matches("\\d+(?:-?\\d+)*") || !empSSSNValue.matches("\\d+(?:-?\\d+)*") || !empPHNValue.matches("\\d+(?:-?\\d+)*") || !empTINValue.matches("\\d+(?:-?\\d+)*") || !empPINValue.matches("\\d+(?:-?\\d+)*")) {
                JOptionPane.showMessageDialog(this, "Please enter numeric values for Phone #, SSS #, PhilHealth #, TIN, and HDMFN.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Date today = new Date();
            if (empDOBValue.after(today)) {
                JOptionPane.showMessageDialog(this, "Date of birth cannot be in the future.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Double basicSalaryValue = 0.0;
            try {
                basicSalaryValue = Double.valueOf(basicSalaryText);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid numeric input for Basic Salary.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (credentialDAO.getUserIdByUsername(username) != null) {
                JOptionPane.showMessageDialog(this, "The username '" + username + "' already exists.", "Add Employee Data", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String newUserId = credentialDAO.addUser(conn, username, defaultPassword); 
            if (newUserId == null) {
                JOptionPane.showMessageDialog(this, "Failed to create user account. Please check logs.", "Add Employee Data", JOptionPane.ERROR_MESSAGE);
                return;
            }

            boolean roleAssigned = credentialDAO.assignRoleToUser(conn, newUserId, "Regular Employee"); 
            if (!roleAssigned) {
                JOptionPane.showMessageDialog(this, "Failed to assign default role to user. Please check logs.", "Add Employee Data", JOptionPane.ERROR_MESSAGE);
                LOGGER.log(Level.WARNING, "Failed to assign 'Regular Employee' role to new user: " + newUserId);
                conn.rollback();
                return;
            }

            Employee newEmployee = new RegularEmployee(
                    newUserId, empFNValue, empLNValue, empAddValue, empDOBValue, empPNValue, empSSSNValue, empPHNValue, empTINValue, empPINValue, empStatValue,
                    empPosValue, empSupValue, basicSalaryValue);

            boolean employeeAdded = employeeDAO.addEmployee(conn, newEmployee); 
            if (!employeeAdded) {
                JOptionPane.showMessageDialog(this, "Failed to add employee details. Please check logs.", "Add Employee Data", JOptionPane.ERROR_MESSAGE);
                conn.rollback();
                return;
            }


            boolean salaryAdded = salaryDAO.addSalary(conn, newUserId, basicSalaryValue); 
            if (!salaryAdded) {
                JOptionPane.showMessageDialog(this, "Failed to add salary details. Please check logs.", "Add Employee Data", JOptionPane.ERROR_MESSAGE);
                conn.rollback(); 
                return;
            }


            conn.commit(); 
            JOptionPane.showMessageDialog(this, "Employee, User, and Salary data added successfully.", "Add Employee Data", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();

        } catch (SQLException ex) {

            if (conn != null) {
                try {
                    conn.rollback(); 
                    LOGGER.log(Level.INFO, "Transaction rolled back due to SQL error.");
                } catch (SQLException rollbackEx) {
                    LOGGER.log(Level.SEVERE, "Error rolling back transaction: " + rollbackEx.getMessage(), rollbackEx);
                }
            }
            LOGGER.log(Level.SEVERE, "Database error during employee addition: " + ex.getMessage(), ex);
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Add Employee Data", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            LOGGER.log(Level.SEVERE, "Number format error in salary calculation: " + ex.getMessage(), ex);
            JOptionPane.showMessageDialog(this, "Invalid numeric input for Basic Salary.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } finally {

            if (conn != null) {
                try {
                    conn.close(); 
                    LOGGER.log(Level.INFO, "Database connection closed.");
                } catch (SQLException closeEx) {
                    LOGGER.log(Level.SEVERE, "Error closing database connection: " + closeEx.getMessage(), closeEx);
                }
            }
        }
    }//GEN-LAST:event_addEmpDataActionPerformed

    private void populatePositionDropdown() {
        try {
            PositionDAO positionDAO = new PositionDAO(); 
            List<String> positions = positionDAO.getAllPositionNames();
            empPos.removeAllItems();
            for (String pos : positions) {
                empPos.addItem(pos);
            }
        } catch (SQLException ex) {
            LOGGER.log(Level.SEVERE, "Failed to load positions", ex);
        }
    }

    private void populateSupervisorDropdown() {
        try {
            EmployeeDAO employeeDAO = new EmployeeDAO();
            List<Employee> allEmployees = employeeDAO.getAllEmployees();
            empSup.removeAllItems();
            for (Employee emp : allEmployees) {
                empSup.addItem(emp.getEmployeeNo());
            }
        } catch (SQLException ex) {
            LOGGER.log(Level.SEVERE, "Failed to load supervisors", ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmpData;
    private javax.swing.JTextField basicSalary;
    private javax.swing.JTextField empAdd;
    private com.toedter.calendar.JDateChooser empDOB;
    private javax.swing.JTextField empFN;
    private javax.swing.JTextField empLN;
    private javax.swing.JTextField empPHN;
    private javax.swing.JTextField empPIN;
    private javax.swing.JTextField empPN;
    private javax.swing.JComboBox<String> empPos;
    private javax.swing.JTextField empSSSN;
    private javax.swing.JTextField empStat;
    private javax.swing.JComboBox<String> empSup;
    private javax.swing.JTextField empTIN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
